class Railway
types
	
values
-- TODO Define values here

instance variables

public trainCounter : nat := 0;
public railwayElements: seq of RailwayElement := [];
public trains: set of [Train] := {};

operations

-- adds a railwayelement to the end of the current sequence
	public appendRailwayElement: RailwayElement ==> ()
	appendRailwayElement(newRail) == (
		if (len railwayElements > 0) then (
			-- set elements ordering
			newRail.counterClockwiseElement := railwayElements(len railwayElements);
			railwayElements(len railwayElements).clockwiseElement := newRail;
		);
		
		-- add to sequence
		railwayElements := railwayElements ^ [newRail];
		
		if isofclass(Rail, newRail) then (
			IO`print("Added new rail.\n")
		) else (
			IO`print("Added new Station.\n")
		)
	);

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Railway