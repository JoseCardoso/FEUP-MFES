class RailwayTest is subclass of MyTestCase
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
railway : Railway := new Railway();
r1 : RailwayElement := new Rail();
r2 : RailwayElement := new Rail();
s1 : RailwayElement := new Station();
s2 : RailwayElement := new Station();
t1 : Train := new Train(1,<ClOCKWISE>);
t2 : Train := new Train(2, <COUNTERCLOCKWISE>);

operations
private resetVariables: () ==> ()
	resetVariables() ==
	(
		railway := new Railway();
		r1 := new Rail();
		r2 := new Rail();
		s1 := new Station();
		s2 := new Station();
		t1 := new Train(1,<ClOCKWISE>);
		t2 := new Train(2, <COUNTERCLOCKWISE>);
	);
	
private testPlaceTrain: () ==> ()
	testPlaceTrain() ==
	(
		dcl train : Train;
		resetVariables();
		IO`print("\n\nTest to check if a train is placed correctly!\n");
		
		railway.appendRailwayElement(r1);
		railway.appendRailwayElement(s1);
		railway.appendRailwayElement(r2);
		
		railway.setCircularRailway();
		train:=railway.placeTrainInStation(3,<ClOCKWISE>,2);
	  assertEqual(true,s1.checkClockwiseTrain());
	  assertEqual(1,card railway.trains);
		
	);

private testRemoveTrain: () ==> ()
	testRemoveTrain() ==
	(
		dcl train : Train;
		resetVariables();
		IO`print("\n\nTest to check if a train is removed correctly!\n");
		
		railway.appendRailwayElement(r1);
		railway.appendRailwayElement(s1);
		railway.appendRailwayElement(r2);
		
		railway.setCircularRailway();
		train:=railway.placeTrainInStation(3,<ClOCKWISE>,2);
		railway.removeTrain(train,s1);
		
		assertEqual(false, s1.checkTrain(train));
		IO`print("\n\nTrain removed correctly!\n");
		
		
		);
	
public static main: () ==> ()
	main() ==
	(
		dcl tester: RailwayTest := new RailwayTest();
		
		tester.testPlaceTrain();
		tester.testRemoveTrain();
		
	);
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end RailwayTest